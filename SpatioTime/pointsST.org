#+PROPERTY: header-args :tangle ../docs/R/pointsST.R :session *R* :eval no-export
#+OPTIONS: ^:nil
#+BIND: org-latex-image-default-height "0.45\\textheight"

#+begin_src R :exports none :tangle no
setwd('~/github/bookvis')
#+end_src

#+begin_src R :exports none  
##################################################################
## Initial configuration
##################################################################
## Clone or download the repository and set the working directory
## with setwd to the folder where the repository is located.

Sys.setlocale("LC_TIME", "C")
#+end_src

* Introduction
label:sec:intro_pointsST

#+begin_src R :exports none
##################################################################
## Data and spatial information
##################################################################
#+end_src

The starting point is to retrieve the data and combine it with the
spatial and temporal information. The data are contained in the
=airQuality= =data.frame=, and the locations are in =airStations=, a
=data.frame= that is converted to a =SpatialPointsDataFrame= object
with the =coordinates= method.


#+INDEX: Data!Air quality in Madrid
#+INDEX: Packages!sp@\texttt{sp}
#+INDEX: Subjects!Data processing and cleaning

#+begin_src R 
library("sp")
  
## Spatial location of stations
airStationsSP <- read.csv2("data/Spatial/airStations.csv")
## rownames are used as the ID of the Spatial object
rownames(airStationsSP) <- substring(airStationsSP$Code, 7)
coordinates(airStationsSP) <- ~ long + lat
proj4string(airStationsSP) <- CRS("+proj=longlat +ellps=WGS84")
## Measurements data
airQuality <- read.csv2("data/Spatial/airQuality.csv")
## Only interested in NO2 
NO2 <- airQuality[airQuality$codParam == 8, ]
#+end_src

Each row of the =NO2= =data.frame= corresponds to a measurement at one
of the stations during a day of the year (long format, following
the schema proposed in cite:Pebesma2012).

#+begin_src R
library(sftime)

airStationsDF <- read.csv2("data/Spatial/airStations.csv")

airStationsSF <- st_as_sf(airStationsDF,
                          coords = c("long", "lat"),
                          crs = 4326)
#+end_src

The =spacetime= package defines several classes for spatiotemporal
data inheriting the classes defined by the =sp= and =xts= packages.
In particular, the =STFDF=, a class for spatiotemporal data with full
space-time grids with =n= spatial locations and =m= times, requires a
=data.frame= with =n·m= rows, (spatial index moving faster than
temporal index).  Thus, we need to transform this structure to build a
multivariate time series where each station is a different variable
(space-wide under the schema of cite:Pebesma2012). The procedure is

- Add a column with the =POSIXct= time index (line [[(timeIndex)]])
- Reshape the =data.frame= from long to wide format with
  =dcast= (line [[(long2wide)]]).
- Define a multivariate time series with =zoo= (Figure
  [[fig:NO2zoo]], line [[(zoo)]])
- Coerce this time series to a vector with =n·m= rows (line [[(vector)]]).
- Finally, create the =STFDF= object with the previous components
  (line [[(stfdf)]]).


#+INDEX: Packages!zoo@\texttt{zoo}
#+INDEX: Packages!reshape2@\texttt{reshape2}
#+INDEX: Packages!spacetime@\texttt{spacetime}
#+INDEX: Subjects!Data processing and cleaning

#+begin_src R -n -r
library("zoo")
library("reshape2")
library("spacetime")
  
NO2$time <- as.Date(with(NO2,                                   (ref:timeIndex)
                         ISOdate(year, month, day)))

NO2wide <- dcast(NO2[, c('codEst', 'dat', 'time')],             (ref:long2wide)
                 time ~ codEst,
                 value.var = "dat")

NO2zoo <- zoo(NO2wide[,-1], NO2wide$time)                             (ref:zoo)

dats <- data.frame(vals = as.vector(t(NO2zoo)))                    (ref:vector)

NO2st <- STFDF(sp = airStationsSP,                                    (ref:stfdf)
               time = index(NO2zoo),
               data = dats)
#+end_src

#+RESULTS:



#+begin_src R
idx <- match(NO2$codEst, airStationsSF$Code)
NO2sft <- st_sftime(dat = NO2$dat, code = NO2$codEst,
                    geometry = airStationsSF$geometry[idx],
                    time = NO2$time)
#+end_src

* Graphics with =spacetime=
label:sec:graphs_with_spacetime

#+begin_src R :exports none
##################################################################
## Graphics with spacetime
##################################################################
#+end_src
The =stplot= function of the =spacetime= package supplies the main
visualization methods for spatiotemporal data. When the mode =xy= is
chosen (default) it is mainly a wrapper around =spplot= and displays a
panel with the spatial data for each element of the time index (Figure
[[fig:NO2STxy]]). The problem with this approach is that only a limited
number of panels can be correctly displayed on one page. In this
example, we print the first twelve days of the sequence.

#+INDEX: Subjects!Small multiples
#+begin_src R :results output graphics file :exports both :file figs/NO2STxy.pdf
airPal <- colorRampPalette(c("springgreen1", "sienna3", "gray5"))(5)
  
stplot(NO2st[, 1:12],
       cuts = 5,
       col.regions = airPal,
       main = "",
       edge.col = "black")
#+end_src

#+CAPTION: Scatterplots of the $NO_2$ values (2011) with a panel for each day of the time series. Each circle represents a different station.
#+LABEL: fig:NO2STxy
#+RESULTS[7e86d8c75682aa68d66610cb75a9ea14833ff5b9]:
[[file:figs/NO2STxy.pdf]]

#+begin_src R
library(ggplot2)

ggplot(NO2sft) + 
  geom_sf(aes(color = dat)) +
  facet_wrap(~ cut(time, 12)) +
  scale_colour_stepsn(n.breaks = 6, colours = airPal)
#+end_src

With the mode =xt=, a space-time plot with space on the x-axis and
time on the y-axis is plotted (Figure [[fig:NO2hovmoller]]).

#+begin_src R :results output graphics file :exports both :file figs/NO2hovmoller.pdf
stplot(NO2st, mode = "xt",
       col.regions = colorRampPalette(airPal)(15),
       scales = list(x = list(rot = 45)),
       ylab = "", xlab = "", main = "")
#+end_src

#+CAPTION: Space-time graphic of the NO_2 time series. Each column represents a different station (denoted with the last two digits of the code).
#+LABEL: fig:NO2hovmoller
#+RESULTS[720ac1fb68e202769dfa044473c2f888ab6a0b7a]:
[[file:figs/NO2hovmoller.pdf]]

#+begin_src R
ggplot(NO2sft) + 
  geom_tile(aes(x = as.factor(code),
                y = time,
                fill = dat))
#+end_src

Finally, with the mode =ts=, data are coerced to a multivariate time series
that is displayed in a single plot (Figure [[fig:NO2zoo]]).

#+begin_src R :results output graphics file :exports both :file figs/NO2zoo.png :width 2000 :height 2000 :res 300
stplot(NO2st, mode = "ts",
       xlab = "",
       lwd = 0.1, col = "black", alpha = 0.6,
       auto.key = FALSE)
#+end_src

#+CAPTION: Time graph of the $NO_2$ time series (2011). Each line represents a different station.
#+LABEL: fig:NO2zoo
#+RESULTS[ea3cfae61f85b1a658256d688e049882c22aaaf8]:
[[file:figs/NO2zoo.png]]

#+begin_src R
ggplot(NO2sft) +
  geom_line(aes(x=time, y = dat),
            colour = "black",
            linewidth = 0.25,
            alpha = 0.6) +
  theme_bw()
#+end_src

These three graphics complement each other and together provide a more
complete view of the behavior of the data. For example in Figure
[[fig:NO2STxy]], we can find stations whose levels remain almost constant
throughout the twelve days period (namely, El Pardo-28079058[fn:1], the
station at the top-left corner that is far from the city center),
while others fluctuate notably during this same period (for example,
Barajas-28079027 and Urb. Embajada-28079055, the two nearby stations
at the right). On the other hand, Figure [[fig:NO2hovmoller]] loses the
spatial information but gives a more comprehensive view of the
evolution of the network of stations. The station El Pardo-28079058 is
significantly below the rest of the stations during the whole year,
with the station Pza. Fdez Ladreda-28079056 being the opposite. In
between, the stations could be divided into two or three groups
according to their levels. Regardless, the network of stations reaches
maximum values during the first days of autumn and at the end of
winter. These maxima are clearly displayed in Figure [[fig:NO2zoo]].


* Footnotes

[fn:1] Use Figure ref:fig:airMadrid as reference of the positions and codes of the stations.

