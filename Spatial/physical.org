#+PROPERTY: header-args :session *R* :tangle ../docs/R/physical.R :eval no-export
#+OPTIONS: ^:nil

#+begin_src R :exports none :tangle no
setwd('~/github/bookvis')
#+end_src

#+begin_src R :exports none  
##################################################################
## Initial configuration
##################################################################
## Clone or download the repository and set the working directory
## with setwd to the folder where the repository is located.
  
#+end_src

* Physical Maps
label:sec:physical

#+begin_src R :exports none
##################################################################
## Physical maps
##################################################################
#+end_src

Brazil[fn:1], the world's fifth largest country, is one of the
seventeen megadiverse countries[fn:2], home to diverse wildlife,
natural environments, and extensive natural resources in a variety of
protected habitats. Throughout this section we will create a physical
map of this exceptional country using data from several data services.

#+INDEX: Packages!raster@\texttt{raster}  
#+INDEX: Packages!rasterVis@\texttt{rasterVis}  
#+INDEX: Packages!sp@\texttt{sp}  
#+INDEX: Packages!colorspace@\texttt{colorspace}  

#+begin_src R 
library("terra")
library("sf")
library("rasterVis")
library("latticeExtra")
library("colorspace")
library("RColorBrewer")
#+end_src

** Retrieving Data
#+begin_src R :exports none
##################################################################
## Retrieving data from DIVA-GIS, GADM and Natural Earth Data
##################################################################
#+end_src
Four types of information are needed: administrative boundaries,
terrain elevation, rivers and lakes, and sea depth.


#+INDEX: Data!GADM
#+INDEX: Data!DIVA-GIS
#+INDEX: Data!Natural Earth Data
#+INDEX: Packages!geodata@\texttt{geodata}
#+INDEX: Packages!rnaturalearth@\texttt{rnaturalearth}

  1. The administrative boundaries are available from Natural
     Earth[fn:3] with the packages =rnaturalearth= and
     =rnaturalearthhires=[fn:4].
     #+begin_src R :eval no-export
     library("rnaturalearth")
     library("rnaturalearthhires")

     brazilAdm <- ne_states(country = "brazil")
     #+end_src

  2. The terrain elevation or digital elevation model (DEM) is
     available from DIVA-GIS service[fn:5] with the =geodata= package,
     obtaining a =SpatRaster= object.
     #+begin_src R :eval no-export
     library(geodata)

     brazilDEM <- elevation_30s("BRA", mask = FALSE,
                                path = tempdir())
     #+end_src
  3. The water lines (rivers and lakes) are available from Natural
     Earth Data. 
     #+begin_src R :eval no-export
     worldRiv <- ne_download(type = "rivers_lake_centerlines",
                             category = "physical", 
                             scale = 10)
     #+end_src
     The rivers and lakes database from Natural Earth Data comprises
     all the world extent, but we only need the rivers of Brazil. The
     function =st_crop= of the package =sf= determines the
     intersection between two objects.
     #+begin_src R :eval no-export
     ## only those features labeled as "River" are needed
     worldRiv <- worldRiv[worldRiv$featurecla == "River",]

     ## Ensure the CRS of brazilDEM matches the CRS of worldRiv
     crs(brazilDEM) <- crs(worldRiv)

     ## and intersect it with worldRiv to extract brazilian rivers
     ## from the world database
     brazilRiv <- st_crop(worldRiv, brazilDEM)
     #+end_src

  4. Finally, the sea depth is also available from Natural Earth
     Data[fn:5]. The raster covers the whole world so it must be
     cropped by the extent of the DEM raster. Besides, this raster
     contains three layers encoding the RGB colorspace. We will take
     the luminance as the representation of the sea depth. It can be
     extracted with a conversion to the HSL colorspace with the
     =colorize= function.
     #+begin_src R :eval no-export
     worldSea <- ne_download(type = "OB_LR", category = "raster", scale = 10)
     brazilSea <- crop(worldSea, brazilDEM)
     ## Convert to HSL and take the third layer (luminance)
     brazilSea <- colorize(brazilSea, to = "hsl")[[3]]
     #+end_src

** Labels
#+begin_src R :exports none
##################################################################
## Labels
##################################################################
#+end_src

Each region of Brazil will be labeled with the name of its
corresponding polygon. The locations of the labels are defined by the
=latitude= and =longitude= values included in the =sf= object. In
addition, a larger label with the name of the country will be placed
in the average centroid.

#+begin_src R
## Locations of labels of each polygon
centroids <- brazilAdm[ , c("longitude", "latitude")]
## Extract the data
centroids <- st_drop_geometry(centroids)
## Location of the "Brazil" label (average of the centroids)
xyBrazil <- apply(centroids, 2, mean)
#+end_src

Some region names are too long to be displayed in one line. Thus, a
previous step is to split the string if it comprises more than two
words.

#+begin_src R 
admNames <- strsplit(as.character(brazilAdm$name), ' ')
  
admNames <- sapply(admNames,
                   FUN = function(s){
                       sep = if (length(s)>2) '\n' else  ' '
                       paste(s, collapse = sep)
                   })
#+end_src

** Overlaying Layers of Information
#+begin_src R :exports none
##################################################################
## Overlaying layers of information
##################################################################
#+end_src

#+INDEX: Subjects!Background map

Therefore, the physical map (Figure ref:fig:brazil) is composed
of four layers: 

1. The sea depth raster displayed with the =levelplot= method of the
   =rasterVis= package. The palette is defined with =brewer.pal=
   (Figure [[ref:fig:rastersBrazil]]).
   #+begin_src R
   blueTheme <- rasterTheme(region = brewer.pal(n = 9, 'Blues'))
  
   seaPlot <- levelplot(brazilSea, par.settings = blueTheme,
                        maxpixels = 1e6, panel = panel.levelplot.raster,
                        margin = FALSE, colorkey = FALSE)
   #+end_src
  
2. The altitude raster layer uses a terrain colors palette, as the one
  produced by the =terrain_hcl= function from the =colorspace= package
  cite:Ihaka.Murrell.ea2016 (Figure [[ref:fig:rastersBrazil]]).
  #+begin_src R
  terrainTheme <- rasterTheme(region = terrain_hcl(15))
  
  altPlot <- levelplot(brazilDEM, par.settings = terrainTheme,
                       maxpixels = 1e6, panel = panel.levelplot.raster,
                       margin = FALSE, colorkey = FALSE)
  #+end_src
  
3. The rivers defined by the =brazilRiv= object. The map is constructed under the =trellis= framework, with =levelplot= and the =layer= mechanism of the =latticeExtra= package. There is no function defined to plot =sf= objects, so =brazilRiv= must be converted to a =SpatialLines= object that can be displayed with =sp.lines=.
   #+begin_src R
   brazilRiv <- as_Spatial(brazilRiv)
   #+end_src

4. The administrative boundaries defined by the =brazilAdm= object and their labels (=admNames= and =centroids=). The =brazilAdm= must be converted to a =SpatialPolygons= object to be displayed with =sp.polygons=.
   #+begin_src R
   brazilAdm <- as_Spatial(brazilAdm)
   #+end_src
    
  #+begin_src R :results output graphics file :exports both :file figs/Spatial/brazil.png :width 2000 :height 2000 :res 300
  seaPlot + altPlot + layer({
      ## Rivers
      sp.lines(brazilRiv, col = 'darkblue', lwd = 0.2)
      ## Administrative boundaries
      sp.polygons(brazilAdm, col = 'black', lwd = 0.3)
      ## Centroids of administrative boundaries ...
      panel.points(centroids, col = 'black')
      ## ... with their labels
      panel.text(centroids, labels = admNames, pos = 3,
                       cex = 0.7, fontfamily = 'Palatino', lineheight=.8)
      ## Country name
      panel.text(xyBrazil[1], xyBrazil[2], label = 'B R A Z I L',
                 cex = 1.5, fontfamily = 'Palatino', fontface = 2)
  })
  #+end_src


#+begin_src R :results output graphics file :exports results :file figs/Spatial/rastersBrazil.png :width 2000 :height 2000 :res 300
print(seaPlot, split = c(1, 1, 2, 1), more = TRUE)
print(altPlot, split = c(2, 1, 2, 1))
#+end_src

#+CAPTION: Sea depth and altitude rasters of Brazil. label:fig:rastersBrazil
#+RESULTS:
[[file:figs/Spatial/rastersBrazil.png]]

#+CAPTION: Physical map of Brazil. Main administrative regions and the Amazonas River are labeled. label:fig:brazil
#+RESULTS:
[[file:figs/Spatial/brazil.png]]


* Footnotes
[fn:1] http://en.wikipedia.org/wiki/Brazil

[fn:2] http://en.wikipedia.org/wiki/Megadiverse_countries

[fn:3] http://www.naturalearthdata.com/

[fn:4] The package =rnaturalearthhires= is not available at CRAN due to its size. More information: https://docs.ropensci.org/rnaturalearthhires/  

[fn:5] https://www.diva-gis.org/
